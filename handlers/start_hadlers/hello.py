from aiogram import types
from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from keyboards.registration_keyb import registration_menu, agreement

router = Router()

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
async def show_welcome(message: Message):
    await message.answer(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ @StudyBoost_bot! üéì\n\n'
        '–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –æ–±–ª–µ–≥—á–∏—Ç—å –æ–±–º–µ–Ω –∑–Ω–∞–Ω–∏—è–º–∏ –∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n\n'
        'üîπ –û–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è –∫–æ–Ω—Å–ø–µ–∫—Ç–∞–º–∏ –∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏: –î–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Ä–∞–±–æ—Ç–∞–º –¥—Ä—É–≥–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.\n\n'
        'üîπ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—á–∫–∏: –ê–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–∞–µ—Ç—Å—è! –ù–∞–±–∏—Ä–∞–π—Ç–µ –æ—á–∫–∏ –∑–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ, –∏ –ø–µ—Ä–≤—ã–µ —Ç—Ä–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—á–∫–æ–≤ –ø–æ–ª—É—á–∞—Ç –¥–µ–Ω–µ–∂–Ω—ã–µ –ø—Ä–∏–∑—ã –ø–æ –∏—Ç–æ–≥–∞–º –º–µ—Å—è—Ü–∞.\n\n'
        'üîπ –û—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ç—É—Å–æ–≤–∫–∞–º –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º, —á—Ç–æ–±—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –∫—Ä—É–≥–æ–∑–æ—Ä.\n\n'
        'üîπ –ü–æ–ª—É—á–∞—Ç—å —Å–æ–≤–µ—Ç—ã: –ß–∏—Ç–∞–π—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å —Å–≤–æ—é —É—á–µ–±—É –∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –≤—Ä–µ–º—è.\n\n'
        '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –∏ —Å–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ—é —É—á–µ–±—É –ø—Ä–æ—â–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ! üìö‚ú®',
        reply_markup=registration_menu
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º
@router.message(F.text.startswith('/start'))
async def start_handler(message: Message, state: FSMContext):

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∫–æ–º–∞–Ω–¥–∞ –∞—Ä–≥—É–º–µ–Ω—Ç (—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID)
    args = message.text.split()
    referrer_id = args[1] if len(args) > 1 else 'None'
    #referrer_id = args[1] if len(args) > 1 and args[1] != str(message.from_user.id) else 'None'
    await state.update_data(referrer_id=referrer_id)
    welcome_message = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!{' –í—ã –ø—Ä–∏—à–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: ' + referrer_id if referrer_id != 'None' else ''}"
    await message.answer(welcome_message)


    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç —Å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º
    await message.bot.send_document(
        chat_id=message.from_user.id,
        document='BQACAgIAAxkBAAIQJWb-yNqpCOhKkViHeQp96c48vuHgAAKEaAAC1Tr5Sz35edJ2tLeBNgQ',
        caption = '–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º!\n\n'
                  '–ü–æ—Å–ª–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —Å –Ω–∞–¥–ø–∏—Å—å—é "–Ø —Å–æ–≥–ª–∞—Å–µ–Ω ‚úÖ"',
        reply_markup=agreement
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–æ–≥–ª–∞—à–µ–Ω–∏—è
@router.callback_query(F.data == "agreement_users")
async def handle_button_click(callback_query: types.CallbackQuery):
    await callback_query.answer("–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã!")
    await show_welcome(callback_query.message)