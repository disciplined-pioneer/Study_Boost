from config import ADMIN_ID
from datetime import datetime

from aiogram import Router, F, types
from aiogram.fsm.context import FSMContext
from states.payment_state import PaymentStates

from keyboards.admin_keyb import access_keyboard
from keyboards.platform_keyb import platform_menu
from handlers.start_hadlers.register_handlers import new_users

from states.payment_state import PaymentStates
from database.requests.user_access import can_use_feature
from handlers.commands_handlers.commands_handlers import user_subscription

router = Router()

@router.message(F.text == '–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É üö™')
async def login_handler(message: types.Message, state: FSMContext):
    
    user_id = message.from_user.id
    can_use, _ = await can_use_feature(user_id)

    if can_use == 2:
        message_text = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –æ—Ç–∫—Ä—ã—Ç <u><b>–±–µ–∑ –≤—Å—è–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π</b></u> üòä'
    elif can_use == 1:
        message_text = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–∞—à–∞ <u><b>–ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞</b></u>, –∏ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª üôÇ'
    else:
        message_text = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ <u><b>–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª</b></u> üôÇ'

    await message.reply(message_text, reply_markup=platform_menu, parse_mode="HTML")
