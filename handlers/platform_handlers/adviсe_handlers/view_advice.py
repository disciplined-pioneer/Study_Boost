from aiogram import Router, F
from aiogram.types import Message, CallbackQuery

from keyboards.platform_keyb import grade_keyboard
from keyboards.platform_keyb import view_category_keyboard

from database.requests.random_advice import get_random_advice, get_user_name

router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ üóÇ"
@router.message(F.text == '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ üóÇ')
async def view_categories(message: Message):
    await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=view_category_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ–≤–µ—Ç–æ–≤
@router.callback_query(lambda c: c.data.startswith('view_'))
async def process_callback_advice(callback_query: CallbackQuery):
    advice_type = callback_query.data.split('_')[1]  # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø —Å–æ–≤–µ—Ç–∞ –∏–∑ callback_data

    # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Å–æ–≤–µ—Ç –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    random_advice = await get_random_advice(advice_type)
    if random_advice == "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤ –ø–æ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏":
        await callback_query.message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤ –ø–æ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    
    else:
        user_name = await get_user_name(int(random_advice['ID_user']))  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–ª —Å–æ–≤–µ—Ç
        if user_name:
            await callback_query.message.answer(f"–°–æ–≤–µ—Ç –æ—Ç {user_name}: \n‚úçÔ∏è ¬´{random_advice['content']}¬ª\n\n–†–µ–π—Ç–∏–Ω–≥ –º–∞—Ç–µ—Ä–∏–∞–ª–∞: {random_advice['like_advice']} üëç | üëé {random_advice['dislike_advice']}", reply_markup=grade_keyboard)
    await callback_query.answer()
