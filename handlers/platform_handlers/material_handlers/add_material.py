import re
import time
from datetime import datetime

from aiogram import types
from aiogram import Router, F
from aiogram.fsm.context import FSMContext

from states.material_state import MaterialStates

from database.requests.user_access import can_use_feature
from NI_assistants.sentiment_text import analyze_sentiment
from database.handlers.database_handler import add_material

from keyboards.material_keyb import material_menu, type_material
from keyboards.cancellation_states import complete_process, cancel_state

from database.requests.advice import get_last_advice_id
from database.handlers.database_handler import add_user_rating_history

router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª ‚ûï"
@router.message(F.text == '–î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª ‚ûï')
async def process_add_material(message: types.Message, state: FSMContext):
    
    user_id = message.from_user.id
    can_use, response_message = await can_use_feature(user_id)

    if can_use == 2:
        await message.reply(
        "‚ùå –ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É *¬´–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå¬ª*. \n\n",
        reply_markup=material_menu,
        parse_mode="Markdown")
        time.sleep(1)
        
        await message.reply('–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç.\n–ü—Ä–∏–º–µ—Ä: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞"', reply_markup=cancel_state)
        await state.set_state(MaterialStates.faculty)
    else:
        await message.reply(response_message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞
@router.message(MaterialStates.faculty)
async def process_faculty(message: types.Message, state: FSMContext):

    if message.text not in ['/cancellation', '–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå']:
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–µ–∫—Å—Ç–∞
        faculty = message.text
        sentiment_score = await analyze_sentiment(faculty)
        if sentiment_score <= -0.01:
            await message.reply("–í–∞—à —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π —Ç–µ–∫—Å—Ç")
            return
        
        await state.update_data(faculty=faculty)
        await message.reply('–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –∫—É—Ä—Å.\n–ü—Ä–∏–º–µ—Ä: "1 –∫—É—Ä—Å"')
        await state.set_state(MaterialStates.course)
    else:
        await state.clear()
        await message.reply('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º üòä', reply_markup=material_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ –∫—É—Ä—Å–∞
@router.message(MaterialStates.course)
async def process_course(message: types.Message, state: FSMContext):

    if message.text not in ['/cancellation', '–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå']:
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–µ–∫—Å—Ç–∞
        course = message.text
        if not re.match(r"^[\w\s]+ –∫—É—Ä—Å$", course):
            await message.reply('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫—É—Ä—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ "{–Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞} –∫—É—Ä—Å"')
            return
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–µ–∫—Å—Ç–∞
        sentiment_score = await analyze_sentiment(course)
        if sentiment_score <= -0.01:
            await message.reply("–í–∞—à —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π —Ç–µ–∫—Å—Ç")
            return
        
        await state.update_data(course=course)
        await message.reply('–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞.\n–ü—Ä–∏–º–µ—Ä: "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã"')
        await state.set_state(MaterialStates.subject)
    else:
        await state.clear()
        await message.reply(
            '–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º üòä',
            reply_markup=material_menu
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
@router.message(MaterialStates.subject)
async def process_subject(message: types.Message, state: FSMContext):

    if message.text not in ['/cancellation', '–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå']:

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–µ–∫—Å—Ç–∞
        subject = message.text
        sentiment_score = await analyze_sentiment(subject)
        if sentiment_score <= -0.01:
            await message.reply("–í–∞—à —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π —Ç–µ–∫—Å—Ç")
            return
        
        await state.update_data(subject=subject)
        await message.reply("–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –º–∞—Ç–µ—Ä–∏–∞–ª–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ", reply_markup=type_material)
        await state.set_state(MaterialStates.type_material)
    else:
        await state.clear()
        await message.reply(
            '–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º üòä',
            reply_markup=material_menu
        )

@router.message(MaterialStates.type_material)
async def process_type_material(message: types.Message, state: FSMContext):

    if message.text not in ['/cancellation', '–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå']:
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç –≤ –∫–æ–¥ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
        material_mapping = {
            '–õ–µ–∫—Ü–∏—è üìö': 'lecture',
            '–î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞ üè†': 'homework',
            '–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ üìù': 'test',
            '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ üî¨': 'laboratory_work'
        }
        material_code = material_mapping.get(message.text)
        
        if not material_code:
            await message.reply("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–∞—Ç–µ—Ä–∏–∞–ª–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.")
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–µ–∫—Å—Ç–∞
        sentiment_score = await analyze_sentiment(material_code)
        if sentiment_score <= -0.01:
            await message.reply("–í–∞—à —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π —Ç–µ–∫—Å—Ç")
            return

        await state.update_data(type_material=material_code)
        await message.reply(
            '–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É –º–∞—Ç–µ—Ä–∏–∞–ª–∞.\n–ü—Ä–∏–º–µ—Ä: "–û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è"',
            reply_markup=cancel_state
        )
        await state.set_state(MaterialStates.topic)
    else:
        await state.clear()
        await message.reply(
            '–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º üòä',
            reply_markup=material_menu
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–º—ã
@router.message(MaterialStates.topic)
async def process_topic(message: types.Message, state: FSMContext):

    if message.text not in ['/cancellation', '–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå']:

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–µ–∫—Å—Ç–∞
        topic = message.text
        sentiment_score = await analyze_sentiment(topic)
        if sentiment_score <= -0.01:
            await message.reply("–í–∞—à —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π —Ç–µ–∫—Å—Ç")
            return
        
        await state.update_data(topic=topic)
        await message.reply('–¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª.\n–ü—Ä–∏–º–µ—Ä: "–í —ç—Ç–æ–π –ª–µ–∫—Ü–∏–∏ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º"')
        await state.set_state(MaterialStates.description_material)
    else:
        await state.clear()
        await message.reply(
            '–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º üòä',
            reply_markup=material_menu
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞
@router.message(MaterialStates.description_material)
async def process_description_material(message: types.Message, state: FSMContext):

    if message.text not in ['/cancellation', '–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå']:
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–µ–∫—Å—Ç–∞
        description_material = message.text
        sentiment_score = await analyze_sentiment(description_material)
        if sentiment_score <= -0.01:
            await message.reply("–í–∞—à —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π —Ç–µ–∫—Å—Ç")
            return
        
        await state.update_data(description_material=description_material)
        await message.reply("–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –º–∞—Ç–µ—Ä–∏–∞–ª–∞ (–±–µ–∑ —Å–∂–∞—Ç–∏—è) –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç")
        await state.set_state(MaterialStates.files_id)
    else:
        await state.clear()
        await message.reply('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º üòä', reply_markup=material_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏—Ö –≤ –æ–±—â–µ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
@router.message(MaterialStates.files_id, F.content_type == 'document')
async def process_document(message: types.Message, state: FSMContext):

    # –ü–æ–ª—É—á–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
    document = message.document
    document_id = document.file_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id –¥–æ–∫—É–º–µ–Ω—Ç–∞

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    files = data.get('files', [])  # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–∞–Ω–Ω—ã—Ö
    files.append({'type': 'document', 'file_id': document_id})  # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–∏–ø–∞

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.update_data(files=files)
    await message.reply(
        "–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω! –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë –¥–æ–∫—É–º–µ–Ω—Ç—ã, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (–±–µ–∑ —Å–∂–∞—Ç–∏—è) –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å.",
        reply_markup=complete_process
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ (—Ç–µ–ø–µ—Ä—å –æ–±—ã—á–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
async def finish_process(message: types.Message, state: FSMContext):
    
    data = await state.get_data()

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î
    await add_material(
        ID_user=str(message.from_user.id),
        date_publication=datetime.now().date(),
        faculty=data.get('faculty'),
        subject=data.get('subject'),
        course=data.get('course'),
        type_material=data.get('type_material'),
        topic=data.get('topic'),
        description_material=data.get('description_material'),
        files_id=str(data.get('files')),
        like_material='0',
        dislike_material='0'
    )

    files = data.get('files', [])  # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
    if files:

        # –ü–æ–ª—É—á–∞–µ–º advice_id –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
        material_id = await get_last_advice_id()
        user_id = message.from_user.id
        date = datetime.now().date()
        await add_user_rating_history(
            advice_id='None',
            material_id=material_id,
            id_user=user_id,
            granted_by=user_id,
            accrual_date=date,
            action_type="add_material",
            rating_value='2'
        )
        
        await message.reply(
            "‚úÖ <b>–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –≤–∫–ª–∞–¥! –ú–∞—Ç–µ—Ä–∏–∞–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!</b>\n"
            "üéâ –í–∞–º –±—ã–ª–æ –Ω–∞—á–∏—Å–ª–µ–Ω–æ <b>+2 –±–∞–ª–ª–∞ –∫ —Ä–µ–π—Ç–∏–Ω–≥—É!</b>\n\n",
            parse_mode="HTML",
            reply_markup=material_menu
        )

    else:
        await message.reply("–í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π, –Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.")

    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π (–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è)
@router.message(F.text, MaterialStates.files_id)
async def cancel_material(message: types.Message, state: FSMContext):

    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    if message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç—å ‚úÖ":
        await finish_process(message, state)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if message.text in ['/cancellation', '–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå']:
        await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await message.reply(
            '–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º üòä',
            reply_markup=material_menu
        )
        return
