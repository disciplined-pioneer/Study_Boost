from aiogram import types

from aiogram import Router, F
from aiogram.fsm.context import FSMContext

from states.material_state import MaterialStates

from keyboards.material_keyb import material_menu
from keyboards.cancellation_states import complete_process, cancel_state

router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª ‚ûï"
@router.message(F.text == '–î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª ‚ûï')
async def add_material(message: types.Message, state: FSMContext):
    await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç. –ü—Ä–∏–º–µ—Ä: –§–∞–∫—É–ª—å—Ç–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.", reply_markup=cancel_state)
    await state.set_state(MaterialStates.faculty)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞
@router.message(MaterialStates.faculty)
async def process_faculty(message: types.Message, state: FSMContext):
    if message.text != '/cancellation' and message.text != '–û—Ç–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ':
        faculty = message.text
        await state.update_data(faculty=faculty)
        await message.answer("–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –∫—É—Ä—Å. –ü—Ä–∏–º–µ—Ä: 1 –∫—É—Ä—Å.")
        await state.set_state(MaterialStates.course)
    else:
        await state.clear()
        await message.answer('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º üòä', reply_markup=material_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ –∫—É—Ä—Å–∞
@router.message(MaterialStates.course)
async def process_course(message: types.Message, state: FSMContext):
    if message.text != '/cancellation' and message.text != '–û—Ç–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ':
        course = message.text
        await state.update_data(course=course)
        await message.answer("–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –ü—Ä–∏–º–µ—Ä: –õ–µ–∫—Ü–∏—è, –ö–æ–Ω—Å–ø–µ–∫—Ç.")
        await state.set_state(MaterialStates.type_material)
    else:
        await state.clear()
        await message.answer('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º üòä', reply_markup=material_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–∏–ø–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
@router.message(MaterialStates.type_material)
async def process_type_material(message: types.Message, state: FSMContext):
    if message.text != '/cancellation' and message.text != '–û—Ç–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ':
        type_material = message.text
        await state.update_data(type_material=type_material)
        await message.answer("–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –ü—Ä–∏–º–µ—Ä: –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã.")
        await state.set_state(MaterialStates.topic)
    else:
        await state.clear()
        await message.answer('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º üòä', reply_markup=material_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–º—ã
@router.message(MaterialStates.topic)
async def process_topic(message: types.Message, state: FSMContext):
    if message.text != '/cancellation' and message.text != '–û—Ç–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ':
        topic = message.text
        await state.update_data(topic=topic)
        await message.answer("–¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª. –ü—Ä–∏–º–µ—Ä: –í —ç—Ç–æ–π –ª–µ–∫—Ü–∏–∏ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º.")
        await state.set_state(MaterialStates.description_material)
    else:
        await state.clear()
        await message.answer('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º üòä', reply_markup=material_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞
@router.message(MaterialStates.description_material)
async def process_description_material(message: types.Message, state: FSMContext):
    if message.text != '/cancellation' and message.text != '–û—Ç–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ':
        description_material = message.text
        await state.update_data(description_material=description_material)
        await message.answer("–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –ü—Ä–∏–º–µ—Ä: —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ª–µ–∫—Ü–∏—è –∏–ª–∏ –∫–æ–Ω—Å–ø–µ–∫—Ç.")
        await state.set_state(MaterialStates.files_id)
    else:
        await state.clear()
        await message.answer('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º üòä', reply_markup=material_menu)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏—Ö –≤ –æ–±—â–µ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
@router.message(MaterialStates.files_id, F.content_type == 'photo')
async def process_photo(message: types.Message, state: FSMContext):

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    photos_info = message.photo
    photos_id = [photo.file_id for photo in photos_info]  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    files = data.get('files', [])  # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–∞–Ω–Ω—ã—Ö
    files.append({'type': 'photo', 'file_id': photos_id[-1]})  # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–∏–ø–∞

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.update_data(files=files)
    await message.answer(
        "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞! –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å.",
        reply_markup=complete_process
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏—Ö –≤ –æ–±—â–µ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
@router.message(MaterialStates.files_id, F.content_type == 'document')
async def process_document(message: types.Message, state: FSMContext):

    # –ü–æ–ª—É—á–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
    document = message.document
    document_id = document.file_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id –¥–æ–∫—É–º–µ–Ω—Ç–∞

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    files = data.get('files', [])  # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–∞–Ω–Ω—ã—Ö
    files.append({'type': 'document', 'file_id': document_id})  # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–∏–ø–∞

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.update_data(files=files)
    await message.answer(
        "–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω! –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë –¥–æ–∫—É–º–µ–Ω—Ç—ã, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å.",
        reply_markup=complete_process
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ (—Ç–µ–ø–µ—Ä—å –æ–±—ã—á–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
async def finish_process(message: types.Message, state: FSMContext):
    data = await state.get_data()
    files = data.get('files', [])  # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
    if files:
        response = "–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à—ë–Ω. –í–æ—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n"
        for file in files:
            response += f"–¢–∏–ø: {file['type']}, ID: {file['file_id']}\n\n"  # –í—ã–≤–æ–¥–∏–º —Ç–∏–ø –∏ ID –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
        await message.answer(response, disable_web_page_preview=True)
    else:
        await message.answer("–í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π, –Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.")

    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π (–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è)
@router.message(F.text, MaterialStates.files_id)
async def cancel_material(message: types.Message, state: FSMContext):

    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    if message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç—å ‚ùå":
        await finish_process(message, state)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if message.text in ['/cancellation', '–û—Ç–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ']:
        await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await message.answer(
            '–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º üòä',
            reply_markup=material_menu
        )
        return
