from aiogram import Router, F
from aiogram.types import Message, CallbackQuery

from keyboards.material_keyb import search_materials

from database.requests.user_access import can_use_feature

from handlers.platform_handlers.material_handlers.search_type_material import get_material_ids_by_type

router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
@router.message(F.text == '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ üìÅ')
async def view_categories(message: Message):

    user_id = message.from_user.id
    can_use, response_message = await can_use_feature(user_id)

    if can_use:
        await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø–æ–∏—Å–∫", reply_markup=search_materials)
    else:
        await message.answer(response_message)

# –î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ –≤–∞—à–µ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
@router.callback_query(F.data.in_({'lecture', 'homework', 'test', 'laboratory_work'}))
async def handle_material_type(callback: CallbackQuery):

    material_type = str(callback.data)
    material_ids = await get_material_ids_by_type(material_type)

    if material_ids:
        material_list = '\n'.join(map(str, material_ids))
        await callback.message.answer(f"–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {material_type}:\n{material_list}")
    else:
        await callback.message.answer(f"–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {material_type} –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.")

    await callback.answer()

