from aiogram import types
from aiogram import Router, F
from aiogram.types import Message

from keyboards.platform_keyb import platform_menu
from database.requests.user_access import can_use_feature

router = Router()

@router.message(F.text == '–ö–æ–º–∞–Ω–¥—ã üìú')
async def commands_handler(message: Message):
    commands_text = (
        "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"
        "<b>/start</b> - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º, –∞–∫—Ç–∏–≤–∞—Ü–∏—è –∏ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.\n\n"
        "<b>/my_data</b> - –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ, –≤–∫–ª—é—á–∞—è –∏—Å—Ç–æ—Ä–∏—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n\n"
        "<b>/my_rating</b> - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.\n\n"
        "<b>/referal_link</b> - –í–∞—à–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π.\n\n"
        "<b>/my_referal</b> - –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –≤–∞–º–∏ –¥—Ä—É–∑–µ–π –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–∏—Ö –±–æ–Ω—É—Å–æ–≤.\n\n"
        "<b>/top_users</b> - –°–ø–∏—Å–æ–∫ –¢–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∞–∏–≤—ã—Å—à–∏–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º."
    )
    await message.answer(commands_text, parse_mode="HTML")

@router.message(F.text == "–ù–∞–∑–∞–¥ üîô")
async def back_handler(message: types.Message):

    user_id = message.from_user.id
    can_use, response_message = await can_use_feature(user_id)

    if can_use:
        await message.answer(f'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üòä', reply_markup=platform_menu)
    else:
        await message.answer(response_message)