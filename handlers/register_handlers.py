from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from keyboards.registration_keyb import registration_menu
from states.registration_states import RegistrationStates

router = Router()

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
async def show_welcome(message: Message):
    await message.answer(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ @StudyBoost_bot! üéì\n\n'
        '–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –æ–±–ª–µ–≥—á–∏—Ç—å –æ–±–º–µ–Ω –∑–Ω–∞–Ω–∏—è–º–∏ –∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n\n'
        'üîπ –û–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è –∫–æ–Ω—Å–ø–µ–∫—Ç–∞–º–∏ –∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏: –î–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Ä–∞–±–æ—Ç–∞–º –¥—Ä—É–≥–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.\n\n'
        'üîπ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—á–∫–∏: –ê–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–∞–µ—Ç—Å—è! –ù–∞–±–∏—Ä–∞–π—Ç–µ –æ—á–∫–∏ –∑–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ, –∏ –ø–µ—Ä–≤—ã–µ —Ç—Ä–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—á–∫–æ–≤ –ø–æ–ª—É—á–∞—Ç –¥–µ–Ω–µ–∂–Ω—ã–µ –ø—Ä–∏–∑—ã –ø–æ –∏—Ç–æ–≥–∞–º –º–µ—Å—è—Ü–∞.\n\n'
        'üîπ –£–∑–Ω–∞–≤–∞—Ç—å –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö: –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö –æ–∂–∏–¥–∞–Ω–∏—è–º–∏ –æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.\n\n'
        'üîπ –°–ª–µ–¥–∏—Ç—å –∑–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ —Å–µ–º–∏–Ω–∞—Ä–∞—Ö –∏ –¥–µ–¥–ª–∞–π–Ω–∞—Ö.\n\n'
        'üîπ –û—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ç—É—Å–æ–≤–∫–∞–º –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º, —á—Ç–æ–±—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –∫—Ä—É–≥–æ–∑–æ—Ä.\n\n'
        'üîπ –ü–æ–ª—É—á–∞—Ç—å —Å–æ–≤–µ—Ç—ã: –ß–∏—Ç–∞–π—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å —Å–≤–æ—é —É—á–µ–±—É –∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –≤—Ä–µ–º—è.\n\n'
        '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –∏ —Å–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ—é —É—á–µ–±—É –ø—Ä–æ—â–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ! üìö‚ú®',
        reply_markup=registration_menu
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(F.text == '/start')
async def start_handler(message: Message):
    await show_welcome(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
@router.message(F.text == '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üìù')
async def registration_handler(message: Message, state: FSMContext):
    await start_registration(message, state)

# –ù–∞—á–∞–ª–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
async def start_registration(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    await state.set_state(RegistrationStates.name)  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∏–º–µ–Ω–∏

# –ì–æ—Ä–æ–¥ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞
@router.message(F.text, RegistrationStates.name)
async def process_university_city(message: Message, state: FSMContext):
    await state.update_data(name=message.text)  # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–º—è
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –≤–∞—à —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç: ")
    await state.set_state(RegistrationStates.university_city)  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞

# –ù–∞–∑–≤–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞
@router.message(F.text, RegistrationStates.university_city)
async def process_name_university(message: Message, state: FSMContext):
    await state.update_data(university_city=message.text)  # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≥–æ—Ä–æ–¥ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞: ")
    await state.set_state(RegistrationStates.name_university)  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞

# –ù–æ–º–µ—Ä –∫—É—Ä—Å–∞
@router.message(F.text, RegistrationStates.name_university)
async def process_course(message: Message, state: FSMContext):
    await state.update_data(name_university=message.text)  # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∫—É—Ä—Å–∞: ")
    await state.set_state(RegistrationStates.course)  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å

# –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞
@router.message(F.text, RegistrationStates.course)
async def process_faculty(message: Message, state: FSMContext):
    await state.update_data(course=message.text)  # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞: ")
    await state.set_state(RegistrationStates.faculty)  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞

# –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
@router.message(F.text, RegistrationStates.faculty)
async def finish_registration(message: Message, state: FSMContext):
    await state.update_data(faculty=message.text)
    data = await state.get_data()
    user_id = message.from_user.id

    await message.answer(f"–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –í–∞—à ID: {user_id}\n–î–∞–Ω–Ω—ã–µ: {data}")
    await state.clear()  # –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –æ—á–∏—â–∞—è –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
