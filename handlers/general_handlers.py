from aiogram import Router, F
from aiogram.types import Message
from datetime import datetime
from keyboards.platform_keyb import platform_menu
from database.requests.user_search import check_user_registration, check_user_payment
from aiogram import types
from aiogram.fsm.context import FSMContext
from states.payment_states import PaymentStates

router = Router()

@router.message(F.photo, PaymentStates.payment_photo)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
async def receive_payment_photo(message: types.Message, state: FSMContext):
    photo_id = message.photo[-1].file_id
    await message.answer("–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞!")
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

@router.message(F.text == '–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É üö™')
async def login_handler(message: types.Message, state: FSMContext):

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    user_id = message.from_user.id
    result, _ = await check_user_registration(user_id)
    
    if result:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–µ–π—Å—Ç–≤—É–µ—Ç –ª–∏ –µ—â—ë –ø–æ–¥–ø–∏—Å–∫–∞
        user_payment = await check_user_payment(user_id)
        
        if user_payment:
            expiration_date = user_payment[3]  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ expiration_date –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ 4-–π –ø–æ–∑–∏—Ü–∏–∏
            now_date = datetime.now().date()
            expiration_date = datetime.strptime(expiration_date, '%Y-%m-%d').date()

            if expiration_date > now_date:
                await message.answer(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –æ—Ç–∫—Ä—ã—Ç üòä', reply_markup=platform_menu)
            else:
                await message.answer(f'–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –æ–ø–ª–∞—á–µ–Ω–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–æ–π: ')
                await state.set_state(PaymentStates.payment_photo)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        else:
            await message.answer('–ù–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –ø–ª–∞—Ç–µ–∂–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.')
    else:
        await message.answer('–í—ã –Ω–µ –±—ã–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üìù"!')

    
@router.message(F.text == '–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏ üíµ')
async def login_handler(message: Message):
    await message.answer('–ó–¥–µ—Å—å –æ–±—ä—è—Å–Ω–∏–º –∫–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö')

@router.message(F.text == '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è üìï')
async def instruction_handler(message: Message):

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
    await message.bot.send_document(
        chat_id=message.from_user.id,
        document='BQACAgIAAxkBAAIQJWb-yNqpCOhKkViHeQp96c48vuHgAAKEaAAC1Tr5Sz35edJ2tLeBNgQ',
        caption = f'–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, –ø–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞, –∞ —Ç–∞–∫–∂–µ –ø—Ä–∏–º–µ—Ä—ã –æ–±–º–µ–Ω–∞ —É—á–µ–±–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∏ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –æ—á–∫–æ–≤ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
    )

@router.message(F.text == '–°–æ–∑–¥–∞—Ç–µ–ª—å ¬©Ô∏è')
async def creator_handler(message: Message):
    text = (
        "–ü—Ä–∏–≤–µ—Ç, –Ø Virtu! üë®‚Äçüíª\n\n"
        "–Ø —è–≤–ª—è—é—Å—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º —ç—Ç–æ–≥–æ Telegram-–±–æ—Ç–∞ –∏ Python-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–º—Å—è –Ω–∞ Data Science ü§ñ\n\n"
        "–ú–æ—è —Ü–µ–ª—å ‚Äî —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –∏ —É–¥–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è –∑–Ω–∞–Ω–∏—è–º–∏ –∏ —É—á–µ–±–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ üìö\n\n"
        "–Ø —Å—Ç—É–¥–µ–Ω—Ç –ø–µ—Ä–≤–æ–≥–æ –∫—É—Ä—Å–∞, –∏ —ç—Ç–æ—Ç –±–æ—Ç –±—ã–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–ø—Ä–æ—Å—Ç–∏—Ç—å –∂–∏–∑–Ω—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∏–¥–µ–∏ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –±—É–¥—É —Ä–∞–¥ –∏—Ö —É—Å–ª—ã—à–∞—Ç—å! üòâ\n\n"
        "–î–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π —á–µ—Ä–µ–∑ –ø–æ—á—Ç—É virtu1129@gmail.com  üì©"
    )

    # ID —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    photo_id = 'AgACAgIAAxkBAAIIg2b6x72lvUPWCK_udjCgFdxTAAHamQAC2usxG3jT2UuwWltlE_cjTgEAAwIAA3kAAzYE'  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π ID —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏

    await message.answer_photo(photo=photo_id, caption=text, parse_mode='Markdown')

@router.message(F.text == '–ü–æ–º–æ—â—å ‚ùì')
async def help_handler(message: Message):
    await message.answer('–ü—Ä–æ—Å–∏–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—Ç–µ–ª –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è')
